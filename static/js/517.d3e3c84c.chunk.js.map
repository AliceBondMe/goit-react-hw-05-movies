{"version":3,"file":"static/js/517.d3e3c84c.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIrBC,EAAQH,EAAAA,QAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gD,uKCJhBG,EAAYL,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kEAMtBI,EAAQN,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAIjBK,EAAcP,EAAAA,QAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gIASxBO,EAAaT,EAAAA,QAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gCAIxBS,EAASX,EAAAA,QAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2B,SCf1BW,EAAc,CAClBC,KAAM,UACNC,MAAO,OACPC,IAAK,WA+CP,EA5CkB,SAAHC,GAAuB,IAAjBC,EAASD,EAATC,UACnB,OACEC,EAAAA,EAAAA,MAACd,EAAS,CAAAe,SAAA,EACRC,EAAAA,EAAAA,KAACV,EAAM,CACLW,IACEJ,EAAUK,YAAW,GAAAC,OAbX,8BAcQ,QAAAA,OAAON,EAAUK,aAC/B,0EAENE,IAAKP,EAAUQ,SAEjBP,EAAAA,EAAAA,MAACZ,EAAW,CAAAa,SAAA,EACVC,EAAAA,EAAAA,KAACf,EAAK,CAAAc,SAAA,GAAAI,OAAKN,EAAUQ,MAAK,MAAAF,OACxBN,EAAUS,aACN,IAAIC,KAAKV,EAAUS,cAAcE,cACjC,eAAc,QAEpBV,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAC,kBAA2B,IACtC,IAAIQ,KAAKV,EAAUS,cAAcG,mBAChC,QACAjB,OAGJM,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAC,aACgB,IAA3BF,EAAUa,aACP,YAAW,GAAAP,OACRQ,KAAKC,MAA+B,GAAzBf,EAAUa,cAAkB,SAEhDZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAC,YAAqB,IAChCF,EAAUgB,OAAOC,KAAI,SAAAC,GAAO,OAAAA,EAAJC,IAAe,IAAEC,KAAK,OAAS,WAE1DnB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAC,WAAmB,IAAEF,EAAUqB,SAAW,WAExDpB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAC,cAAsB,IAAEF,EAAUsB,UAAY,eAKpE,E,UCxDaC,EAAgBzC,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAO1BwC,EAAU1C,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4GAQnByC,GAAgB3C,EAAAA,EAAAA,SAAO4C,EAAAA,GAAP5C,CAAeQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8DC0D5C,EAzDyB,WAAO,IAAD2C,EACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzC9B,EAASgC,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAgB,YAAaC,OAAOjB,IACjCkB,MAAK,SAAAC,GACJb,EAAaa,GACbT,EAAS,GACX,IACCU,OAAM,SAAAC,GACLX,EACE,yHAEFY,YAAW,WACTT,EAAS,IACX,GAAG,IACL,GACJ,GAAG,CAACb,EAASa,KAGXxC,EAAAA,EAAAA,MAAAkD,EAAAA,SAAA,CAAAjD,SAAA,EACEC,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACC,GAAe,QAAb1B,EAAO,OAALY,QAAK,IAALA,OAAK,EAALA,EAAOe,YAAI,IAAA3B,EAAAA,EAAI,IAAIzB,SAAC,YAEnB,KAAVmC,GAAgBrC,GACfC,EAAAA,EAAAA,MAAAkD,EAAAA,SAAA,CAAAjD,SAAA,EACEC,EAAAA,EAAAA,KAACoD,EAAS,CAACvD,UAAWA,KAEtBC,EAAAA,EAAAA,MAACsB,EAAa,CAAArB,SAAA,EACZC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJD,EAAAA,EAAAA,MAACuB,EAAO,CAAAtB,SAAA,EACNC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACsB,EAAa,CAAC4B,GAAG,OAAOd,MAAO,CAAEe,KAAW,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOe,MAAOpD,SAAC,YAIzDC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACsB,EAAa,CAAC4B,GAAG,UAAUd,MAAO,CAAEe,KAAW,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOe,MAAOpD,SAAC,qBAMhEC,EAAAA,EAAAA,KAACqD,EAAAA,SAAQ,CAACC,UAAUtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,IAAIxD,UAC7BC,EAAAA,EAAAA,KAACwD,EAAAA,GAAM,UAIXxD,EAAAA,EAAAA,KAAClB,EAAAA,EAAK,CAAAiB,SAAEmC,MAIhB,C,iGCxEMuB,EAAU,mCACVC,EAAW,+BAEV,SAAejB,EAAekB,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAoBpC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MApBM,SAAAC,EAA+BC,EAAMC,EAAIC,GAAK,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,IAAAA,MAAA,SAAAQ,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAYjD,OAXIL,EAAiB,CACrBM,SAAU,sBACVC,UAAU,UAAD3E,OAAYkE,GACrBU,cAAe,gBACfC,KAAK,UAAD7E,OAAYkE,EAAE,YAClBY,QAAQ,UAAD9E,OAAYkE,EAAE,aAGjBG,EAAe,IAAIU,gBAAgB,CACvCZ,MAAOA,EACPa,eAAe,IACfT,EAAAE,KAAA,EAEqBQ,EAAAA,EAAAA,IAAU,GAADjF,OAC3BuD,GAAQvD,OAAGoE,EAAeH,GAAK,aAAAjE,OAAYsD,EAAO,KAAAtD,OAC1C,kBAATiE,EAA2BI,EAAe,KAE5C,KAAD,EAJa,OAARC,EAAQC,EAAAW,KAAAX,EAAAY,OAAA,SAKPb,EAASc,MAAI,wBAAAb,EAAAc,OAAA,GAAArB,EAAA,MACrBJ,MAAA,KAAAC,UAAA,C","sources":["pages/HomePage/HomePage.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 600px;\n  font-size: 18px;\n  line-height: 28px;\n`;\n\nexport const LineHeader = styled.span`\n  font-weight: bold;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n","import {\n  Container,\n  Information,\n  LineHeader,\n  Poster,\n  Title,\n} from './MovieInfo.styled';\n\nconst POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nconst MovieInfo = ({ movieData }) => {\n  return (\n    <Container>\n      <Poster\n        src={\n          movieData.poster_path\n            ? `${POSTERS_URL}w300${movieData.poster_path}`\n            : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n        }\n        alt={movieData.title}\n      />\n      <Information>\n        <Title>{`${movieData.title} (${\n          movieData.release_date\n            ? new Date(movieData.release_date).getFullYear()\n            : 'year unknown'\n        })`}</Title>\n        <p>\n          <LineHeader>Release date:</LineHeader>{' '}\n          {new Date(movieData.release_date).toLocaleDateString(\n            'en-US',\n            dateOptions\n          )}\n        </p>\n        <p>\n          <LineHeader>Rating: </LineHeader>\n          {movieData.vote_average === 0\n            ? 'Not rated'\n            : `${Math.round(movieData.vote_average * 10)}%`}\n        </p>\n        <p>\n          <LineHeader>Genres:</LineHeader>{' '}\n          {movieData.genres.map(({ name }) => name).join(', ') || 'None'}\n        </p>\n        <p>\n          <LineHeader>Promo:</LineHeader> {movieData.tagline || 'None'}\n        </p>\n        <p>\n          <LineHeader>Overview:</LineHeader> {movieData.overview || 'None'}\n        </p>\n      </Information>\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalNav = styled.div`\n  display: flex;\n  gap: 40px;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  &.active {\n    text-decoration: underline;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport {\n  AdditionalNav,\n  NavLinkStyled,\n  NavList,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState('');\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMoviesData('movieById', Number(movieId))\n      .then(results => {\n        setMovieData(results);\n        setError('');\n      })\n      .catch(err => {\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later. You will be automatically redirected to Home page.'\n        );\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      <Link to={state?.from ?? '/'}>Go back</Link>\n\n      {error === '' && movieData ? (\n        <>\n          <MovieInfo movieData={movieData} />\n\n          <AdditionalNav>\n            <h2>Additional information: </h2>\n            <NavList>\n              <li>\n                <NavLinkStyled to=\"cast\" state={{ from: state?.from }}>\n                  Cast\n                </NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"reviews\" state={{ from: state?.from }}>\n                  Reviews\n                </NavLinkStyled>\n              </li>\n            </NavList>\n          </AdditionalNav>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <Error>{error}</Error>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: true,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["PageTitle","styled","_templateObject","_taggedTemplateLiteral","Error","_templateObject2","Container","Title","Information","_templateObject3","LineHeader","_templateObject4","Poster","_templateObject5","dateOptions","year","month","day","_ref","movieData","_jsxs","children","_jsx","src","poster_path","concat","alt","title","release_date","Date","getFullYear","toLocaleDateString","vote_average","Math","round","genres","map","_ref2","name","join","tagline","overview","AdditionalNav","NavList","NavLinkStyled","NavLink","_state$from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovieData","_useState3","_useState4","error","setError","state","useLocation","navigate","useNavigate","useEffect","fetchMoviesData","Number","then","results","catch","err","setTimeout","_Fragment","Link","to","from","MovieInfo","Suspense","fallback","Loader","Outlet","api_key","BASE_URL","_x","_x2","_x3","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","id","query","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","cast","reviews","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}