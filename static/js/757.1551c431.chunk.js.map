{"version":3,"file":"static/js/757.1551c431.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 600px;\n  font-size: 20px;\n  line-height: 28px;\n`;\n\nexport const LineHeader = styled.span`\n  font-weight: bold;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, NavLink, Outlet, useParams } from 'react-router-dom';\nimport { searchMovieById } from 'services/tmdb-api';\nimport {\n  Container,\n  Information,\n  LineHeader,\n  Title,\n} from './MovieDetailsPage.styled';\n\nconst POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n\n  useEffect(() => {\n    searchMovieById(Number(movieId)).then(results => setMovieData(results));\n  }, [movieId]);\n\n  if (!movieData) {\n    return;\n  }\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n\n      <Container>\n        <img\n          src={`${POSTERS_URL}w300${movieData.poster_path}`}\n          alt={movieData.title}\n        />\n        <Information>\n          <Title>{`${movieData.title} (${new Date(\n            movieData.release_date\n          ).getFullYear()})`}</Title>\n          <p>\n            <LineHeader>Release date:</LineHeader>{' '}\n            {new Date(movieData.release_date).toLocaleDateString(\n              'en-US',\n              dateOptions\n            )}\n          </p>\n          <p>\n            <LineHeader>Rating: </LineHeader>\n            {movieData.vote_average === 0\n              ? 'Not rated'\n              : `${Math.round(movieData.vote_average * 10)}%`}\n          </p>\n          <p>\n            <LineHeader>Genres:</LineHeader>{' '}\n            {movieData.genres.map(({ name }) => name).join(', ') || 'None'}\n          </p>\n          <p>\n            <LineHeader>Promo:</LineHeader> {movieData.tagline || 'None'}\n          </p>\n          <p>\n            <LineHeader>Overview:</LineHeader> {movieData.overview || 'None'}\n          </p>\n        </Information>\n      </Container>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nexport async function searchTrendingMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const searchParams = new URLSearchParams({\n    api_key: '81bc6a75d9ad77927c9b3f7e8ad30411',\n  });\n\n  const response = await axios.get(`${BASE_URL}?${searchParams}`);\n  return response.data;\n}\n\nexport async function searchMovieById(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const searchParams = new URLSearchParams({\n    api_key: '81bc6a75d9ad77927c9b3f7e8ad30411',\n  });\n\n  const response = await axios.get(`${BASE_URL}/${id}?${searchParams}`);\n  return response.data;\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Information","_templateObject3","LineHeader","_templateObject4","dateOptions","year","month","day","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","useEffect","searchMovieById","Number","then","results","_jsxs","_Fragment","children","_jsx","Link","to","src","concat","poster_path","alt","title","Date","release_date","getFullYear","toLocaleDateString","vote_average","Math","round","genres","map","_ref","name","join","tagline","overview","NavLink","Suspense","fallback","Outlet","searchTrendingMovies","_searchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","searchParams","response","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","stop","_x","_searchMovieById","_callee2","id","_context2"],"sourceRoot":""}