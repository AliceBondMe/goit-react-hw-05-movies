{"version":3,"file":"static/js/680.bad7f050.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","services/tmdb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  color: #113835;\n`;\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid #ffffff;\n  background-color: ${({ $color }) => $color};\n  color: #ffffff;\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  List,\n  Rating,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <CardLink\n            to={\n              location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`\n            }\n            state={{ from: location }}\n          >\n            <ImgWrap>\n              <Image\n                src={\n                  movie.poster_path\n                    ? `${POSTERS_URL}w200${movie.poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n                }\n                alt={movie.title}\n              />\n            </ImgWrap>\n            <Title>{movie.title}</Title>\n            <p>\n              {movie.release_date\n                ? new Date(movie.release_date).toLocaleDateString(\n                    'en-US',\n                    dateOptions\n                  )\n                : ''}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </CardLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Error, PageTitle } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchMoviesData('trending')\n      .then(({ results }) => {\n        if (!results.length) {\n          setError(\n            'We are sorry, but something went wrong :( Please, try again later'\n          );\n          return;\n        }\n        setMovies(results);\n        setError('');\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      );\n  }, []);\n\n  return (\n    <div>\n      <PageTitle>Popular today:</PageTitle>\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: true,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","movies","location","useLocation","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","pathname","concat","id","state","from","src","poster_path","alt","title","release_date","Date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","useEffect","fetchMoviesData","then","results","length","catch","PageTitle","MoviesList","Error","api_key","BASE_URL","_x","_x2","_x3","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","query","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","cast","reviews","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}