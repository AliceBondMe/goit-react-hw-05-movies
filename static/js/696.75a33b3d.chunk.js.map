{"version":3,"file":"static/js/696.75a33b3d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/tmdb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  color: #113835;\n`;\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid #ffffff;\n  background-color: ${({ $color }) => $color};\n  color: #ffffff;\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","import { CardLink, Image, List, Rating, Title } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <CardLink to={`movies/${movie.id}`}>\n            <Image\n              src={`${POSTERS_URL}w200${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <Title>{movie.title}</Title>\n            <p>\n              {new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </CardLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { searchTrendingMovies } from 'services/tmdb-api';\nimport { PageTitle } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    searchTrendingMovies().then(({ results }) => setMovies(results));\n  }, []);\n\n  return (\n    <div>\n      <PageTitle>Popular today:</PageTitle>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nexport async function searchTrendingMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const searchParams = new URLSearchParams({\n    api_key: '81bc6a75d9ad77927c9b3f7e8ad30411',\n  });\n\n  const response = await axios.get(`${BASE_URL}?${searchParams}`);\n  return response.data;\n}\n\nexport async function searchMovieById(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const searchParams = new URLSearchParams({\n    api_key: '81bc6a75d9ad77927c9b3f7e8ad30411',\n  });\n\n  const response = await axios.get(`${BASE_URL}/${id}?${searchParams}`);\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","CardLink","Link","_templateObject2","Image","_templateObject3","Title","_templateObject4","Rating","_templateObject5","_ref","$color","movies","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","concat","id","src","poster_path","alt","title","Date","release_date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","PageTitle","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","searchTrendingMovies","then","results","MoviesList","_searchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","searchParams","response","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","stop","searchMovieById","_x","_searchMovieById","_callee2","_context2"],"sourceRoot":""}