{"version":3,"file":"static/js/640.44cd1390.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  color: #113835;\n`;\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid #ffffff;\n  background-color: ${({ $color }) => $color};\n  color: #ffffff;\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  List,\n  Rating,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <CardLink\n            to={\n              location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`\n            }\n            state={{ from: location }}\n          >\n            <ImgWrap>\n              <Image\n                src={\n                  movie.poster_path\n                    ? `${POSTERS_URL}w200${movie.poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n                }\n                alt={movie.title}\n              />\n            </ImgWrap>\n            <Title>{movie.title}</Title>\n            <p>\n              {movie.release_date\n                ? new Date(movie.release_date).toLocaleDateString(\n                    'en-US',\n                    dateOptions\n                  )\n                : ''}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </CardLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #113835;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #e4f8f1d3;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ButtonImg = styled(BsSearch)`\n  width: 36px;\n  height: 36px;\n  color: #0b615a;\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  SearchForm,\n  SearchFormButton,\n  ButtonLabel,\n  SearchInput,\n  ButtonImg,\n} from './Searchbar.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Searchbar = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  const handleSearch = () => {\n    if (query === '') {\n      setError('Please enter your search query');\n      return;\n    }\n    setSearchParams({ query: query });\n    setError('');\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n    if (value) {\n      setQuery(value);\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSearch}>\n        <SearchForm>\n          <SearchInput\n            value={query}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            onChange={handleChange}\n          />\n\n          <SearchFormButton type=\"submit\">\n            <ButtonImg />\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchFormButton>\n        </SearchForm>\n      </Formik>\n\n      {error === '' ? '' : <div>{error}</div>}\n    </>\n  );\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesData } from 'services/tmdb-api';\n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n\n    fetchMoviesData('searchByQuery', 0, query)\n      .then(({ results }) => {\n        if (!results.length) {\n          setError(\n            `We couldn't find movies, mentioning ${query.toUpperCase()}. Try something else`\n          );\n          return;\n        }\n        setMovies(results);\n        setError('');\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      );\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Searchbar />\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: true,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","movies","location","useLocation","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","pathname","concat","id","state","from","src","poster_path","alt","title","release_date","Date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","PageTitle","Error","SearchForm","Form","SearchFormButton","ButtonImg","BsSearch","ButtonLabel","SearchInput","Field","Searchbar","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","error","setError","useEffect","value","get","_Fragment","Formik","initialValues","searchQuery","onSubmit","name","type","autoComplete","autoFocus","placeholder","onChange","target","setMovies","fetchMoviesData","then","results","length","toUpperCase","catch","MoviesList","api_key","BASE_URL","_x","_x2","_x3","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endpointByType","response","_context","prev","next","trending","movieById","searchByQuery","cast","reviews","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}